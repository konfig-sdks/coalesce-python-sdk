# coding: utf-8

"""
    Coalesce API

    REST API for performing operations with the Coalesce backend.

    The version of the OpenAPI document: 1.0.0
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING

from coalesce_python_sdk.type.applied_column_tests import AppliedColumnTests
from coalesce_python_sdk.type.column_metadata_config import ColumnMetadataConfig
from coalesce_python_sdk.type.column_reference import ColumnReference
from coalesce_python_sdk.type.hash_metadata import HashMetadata
from coalesce_python_sdk.type.intermediate_column_ref_result import IntermediateColumnRefResult
from coalesce_python_sdk.type.source_column_reference import SourceColumnReference

class RequiredColumnMetadata(TypedDict):
    description: str

    columnID: str

    dataType: str

    name: str

    nullable: bool

class OptionalColumnMetadata(TypedDict, total=False):
    appliedColumnTests: AppliedColumnTests

    columnReferences: typing.List[IntermediateColumnRefResult]

    config: ColumnMetadataConfig

    defaultValue: str

    hashDetails: HashMetadata

    hashedColumns: typing.List[ColumnReference]

    # Tags the column as a business key.
    isBusinessKey: bool

    # Tags the column as a change tracking column in type 2 dimensions.
    isChangeTracking: bool

    # Tags the column as a surrogate key, e.g. DIM_CUSTOMER_KEY.
    isSurrogateKey: bool

    keyColumnType: str

    # Tags the column as a primary key.
    primaryKey: bool

    sources: typing.List[SourceColumnReference]

    systemColumnType: str

    transform: str

    uniqueKey: bool

class ColumnMetadata(RequiredColumnMetadata, OptionalColumnMetadata):
    pass
